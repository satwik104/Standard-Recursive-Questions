Write a recursive function to convert a given string into the number it represents. That is input will be a numeric string that contains only numbers, you need to convert the string into corresponding integer and return the answer.
Input format :
Numeric string S (string, Eg. "1234")
Output format :
Corresponding integer N (int, Eg. 1234)
Constraints :
0 <= |S| <= 9
where |S| represents length of string S.
Sample Input 1 :
00001231
Sample Output 1 :
1231
Sample Input 2 :
12567
Sample Output 2 :
12567
************************CODE****************
#include <iostream>
#include "solution.h"
using namespace std;

int main() {
    char input[50];
    cin >> input;
    cout << stringToNumber(input) << endl;
}
//MUST SEE THE HINT VIDEO FOR BETTR VIEW
#include<cstring>
#include <math.h>
int stringToNumber(char input[]) {
   
    // BASE CASE
    if(input[0] == '\0')
        return 0;
    //recursive call
    int small_ans = stringToNumber(input+1);//think that it will give the required ans and do your part below
    //calculations for our part
        int len=strlen(input);
   int b=input[0] - '0'; //substracting the asccii value of '0' that is 48 from asscii value of character at input[0] for geeting that
                         //character as a intiger
    int ans = b*pow(10,len-1) + small_ans; //adding the intiger ans gain from recursion 
    return ans;
}
